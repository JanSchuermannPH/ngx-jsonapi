{"version":3,"file":"ngx-jsonapi.module.js","sourceRoot":"","sources":["../src/ngx-jsonapi.module.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,QAAQ,EAAuB,QAAQ,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAClF,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAE/C,OAAO,EAAE,gBAAgB,EAAE,MAAM,sBAAsB,CAAC;AAExD,OAAO,EAAE,IAAI,IAAI,WAAW,EAAE,MAAM,QAAQ,CAAC;AAC7C,OAAO,EAAE,IAAI,IAAI,WAAW,EAAE,MAAM,wBAAwB,CAAC;AAC7D,OAAO,EAAE,YAAY,IAAI,YAAY,EAAE,MAAM,yBAAyB,CAAC;AACvE,OAAO,EAAE,4BAA4B,EAAE,MAAM,0CAA0C,CAAC;AACxF,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AAiBjD,MAAM;;;;;gBAUyC,cAAgC,WAAwB;QAC/F,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YACf,MAAM,IAAI,KAAK,CAAC,qEAAqE,CAAC,CAAC;SAC1F;;;;;;IAZE,MAAM,CAAC,OAAO,CAAC,MAAqB;QACvC,MAAM,CAAC;YACH,QAAQ,EAAE,gBAAgB;YAC1B,SAAS,EAAE;gBACP,EAAE,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,EAAE;aAC/C;SACJ,CAAC;;;;YAtBT,QAAQ,SAAC;gBACN,OAAO,EAAE;oBACL,YAAY;iBACf;gBACD,OAAO,EAAE;oBAEL,gBAAgB;iBACnB;gBACD,SAAS,EAAE;oBACP,WAAW;oBACX,4BAA4B;oBAC5B,YAAY;oBACZ,WAAW;iBACd;aACJ;;;;YACY,gBAAgB,uBAUL,QAAQ,YAAI,QAAQ;YA/B3B,WAAW","sourcesContent":["import { NgModule, ModuleWithProviders, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { Core as JsonapiCore } from './core';\nimport { Http as JsonapiHttp } from './sources/http.service';\nimport { StoreService as JsonapiStore } from './sources/store.service';\nimport { NoDuplicatedHttpCallsService } from './services/noduplicatedhttpcalls.service';\nimport { JsonapiConfig } from './jsonapi-config';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        // BrowserModule,  // needed by HttpClientModule?\n        HttpClientModule\n    ],\n    providers: [\n        JsonapiCore,\n        NoDuplicatedHttpCallsService,\n        JsonapiStore,\n        JsonapiHttp\n    ]\n})\nexport class NgxJsonapiModule {\n    public static forRoot(config: JsonapiConfig): ModuleWithProviders {\n        return {\n            ngModule: NgxJsonapiModule,\n            providers: [\n                { provide: JsonapiConfig, useValue: config }\n            ]\n        };\n    }\n\n    public constructor(@Optional() @SkipSelf() parentModule: NgxJsonapiModule, jsonapiCore: JsonapiCore) {\n        if (parentModule) {\n            throw new Error('NgxJsonapiModule is already loaded. Import it in the AppModule only');\n        }\n    }\n}\n"]}