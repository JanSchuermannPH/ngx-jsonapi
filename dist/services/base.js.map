{"version":3,"file":"base.js","sourceRoot":"","sources":["../../src/services/base.ts"],"names":[],"mappings":";;;;AAMA,OAAO,EAAE,IAAI,EAAE,MAAM,QAAQ,CAAC;AAG9B,MAAM;;;;;IAWK,MAAM,CAAC,aAAa;QACvB,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAC1B,EAAE,EACF;YACI,OAAO,EAAE;gBACL,GAAG,EAAE;oBACD,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;iBACvC;gBACD,UAAU,EAAE,KAAK;aACpB;YACD,QAAQ,EAAE;gBACN,GAAG,EAAE;oBACD,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG;wBAC5B,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;qBACpB,CAAC,CAAC;iBACN;gBACD,UAAU,EAAE,KAAK;aACpB;YACD,WAAW,EAAE;gBACT,KAAK,EAAE,KAAK;gBACZ,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;aACjB;YACD,OAAO,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE;YACzD,kBAAkB,EAAE;gBAChB,KAAK,EAAE,CAAC;gBACR,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;aACjB;YACD,IAAI,EAAE,EAAE,KAAK,EAAE,IAAI,IAAI,EAAE,EAAE,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE;SACjE,CACJ,CAAC;;;;;;;IAGC,MAAM,CAAC,YAAY,CAAC,GAAW,EAAE,WAAmB;QACvD,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,WAAW,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;;;;;;;;IAG3D,MAAM,CAAC,OAAO,CACjB,UAAa,EACb,EAAgD;QAEhD,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,GAAG;YAC/B,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;SAC5B,CAAC,CAAC;;;cAtD2D;IAC9D,EAAE,EAAE,EAAE;IACN,OAAO,EAAE,EAAE;CACd;cAE+B;IAC5B,aAAa,EAAE,EAAE;IACjB,GAAG,EAAE,CAAC;CACT","sourcesContent":["import {\n    ISchema,\n    ICollection,\n    IParamsCollection,\n    IParamsResource,\n} from '../interfaces';\nimport { Page } from './page';\nimport { Resource } from '../resource';\n\nexport class Base {\n    public static Params: /* IParamsCollection | */ IParamsResource = {\n        id: '',\n        include: []\n    };\n\n    public static Schema: ISchema = {\n        relationships: {},\n        ttl: 0\n    };\n\n    public static newCollection<R extends Resource = Resource>(): ICollection<R> {\n        return Object.defineProperties(\n            {},\n            {\n                $length: {\n                    get: function() {\n                        return Object.keys(this).length * 1;\n                    },\n                    enumerable: false,\n                },\n                $toArray: {\n                    get: function() {\n                        return Object.keys(this).map(key => {\n                            return this[key];\n                        });\n                    },\n                    enumerable: false,\n                },\n                $is_loading: {\n                    value: false,\n                    enumerable: false,\n                    writable: true,\n                },\n                $source: { value: '', enumerable: false, writable: true },\n                $cache_last_update: {\n                    value: 0,\n                    enumerable: false,\n                    writable: true\n                },\n                page: { value: new Page(), enumerable: false, writable: true }\n            }\n        );\n    }\n\n    public static isObjectLive(ttl: number, last_update: number) {\n        return (ttl >= 0 && Date.now() <= (last_update + ttl * 1000));\n    }\n\n    public static forEach<T extends { [keyx: string ]: any } >(\n        collection: T,\n        fc: (object: any, key?: string | number) => void\n    ): void {\n        Object.keys(collection).forEach(key => {\n            fc(collection[key], key);\n        });\n    }\n}\n"]}