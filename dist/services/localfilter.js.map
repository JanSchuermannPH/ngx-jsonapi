{"version":3,"file":"localfilter.js","sourceRoot":"","sources":["../../src/services/localfilter.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,kBAAkB,CAAC;AAIxC,MAAM;;;;gBAGiB,WAAmB;QAClC,IAAI,CAAC,iBAAiB,GAAG,WAAW,IAAI,EAAE,CAAC;;;;;;;IAGvC,UAAU,CAAC,QAAkB,EAAE,WAAW;QAC9C,GAAG,CAAC,CAAC,qBAAI,SAAS,IAAI,WAAW,CAAC,CAAC,CAAC;YAChC,EAAE,CAAC,CAAC,OAAO,QAAQ,KAAK,QAAQ,IAAI,CAAC,CAAC,YAAY,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC;;gBAE9D,MAAM,CAAC,IAAI,CAAC;aACf;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,WAAW,CAAC,SAAS,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;;gBAEpD,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,IAAI,CAC9B,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,CACjC,CAAC;aACL;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;;gBAE5D,MAAM,CAAC,CACH,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,WAAW,CAAC,SAAS,CAAC,CAC5D,CAAC;aACL;SACJ;QAED,MAAM,CAAC,KAAK,CAAC;;;;;;;IAGV,gBAAgB,CACnB,iBAA8B,EAC9B,eAA4B;QAE5B,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YAC7C,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC,QAAQ,EAAE,GAAG;gBAC1C,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;oBACpD,eAAe,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;iBACnC;aACJ,CAAC,CAAC;SACN;;CAER","sourcesContent":["import { Base } from '../services/base';\nimport { Resource } from '../resource';\nimport { ICollection } from '../interfaces/';\n\nexport class LocalFilter {\n    private localfilterparams;\n\n    public constructor(localfilter: object) {\n        this.localfilterparams = localfilter || {};\n    }\n\n    private passFilter(resource: Resource, localfilter): boolean {\n        for (let attribute in localfilter) {\n            if (typeof resource !== 'object' || !('attributes' in resource)) {\n                // is not a resource. Is an internal property, for example $source\n                return true;\n            } else if (typeof localfilter[attribute] === 'object') {\n                // its a regular expression\n                return localfilter[attribute].test(\n                    resource.attributes[attribute]\n                );\n            } else if (typeof resource.attributes[attribute] === 'string') {\n                // just a string\n                return (\n                    resource.attributes[attribute] === localfilter[attribute]\n                );\n            }\n        }\n\n        return false;\n    }\n\n    public filterCollection(\n        source_collection: ICollection,\n        dest_collection: ICollection\n    ) {\n        if (Object.keys(this.localfilterparams).length) {\n            Base.forEach(source_collection, (resource, key) => {\n                if (this.passFilter(resource, this.localfilterparams)) {\n                    dest_collection[key] = resource;\n                }\n            });\n        }\n    }\n}\n"]}